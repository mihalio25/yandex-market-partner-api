#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ Yandex Market Partner API
–ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–µ API –≤—ã–∑–æ–≤—ã
"""

import csv
import time
import json
from datetime import datetime
from typing import Dict, List
from yandex_market_api import YandexMarketClient, AuthType
from config import get_config

def get_detailed_prices(client: YandexMarketClient, campaign_id: int, offer_ids: List[str]) -> Dict:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    
    Args:
        client: API –∫–ª–∏–µ–Ω—Ç
        campaign_id: ID –∫–∞–º–ø–∞–Ω–∏–∏
        offer_ids: –°–ø–∏—Å–æ–∫ ID —Ç–æ–≤–∞—Ä–æ–≤
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ü–µ–Ω–∞—Ö
    """
    if not offer_ids:
        return {}
    
    print(f"üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –¥–ª—è {len(offer_ids)} —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –ø–∞–∫–µ—Ç—ã –ø–æ 1000 —Ç–æ–≤–∞—Ä–æ–≤
    batch_size = 1000
    all_prices = {}
    
    for i in range(0, len(offer_ids), batch_size):
        batch = offer_ids[i:i + batch_size]
        batch_num = i // batch_size + 1
        total_batches = (len(offer_ids) + batch_size - 1) // batch_size
        
        print(f"   –ü–∞–∫–µ—Ç {batch_num}/{total_batches}: {len(batch)} —Ç–æ–≤–∞—Ä–æ–≤")
        
        try:
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API —Ü–µ–Ω
            request_body = {"offerIds": batch}
            
            response = client.api._make_request(
                "POST", 
                f"/campaigns/{campaign_id}/offer-prices",
                data=request_body
            )
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
            for offer_data in response.get('offers', []):
                offer_id = offer_data.get('offerId')
                if offer_id:
                    all_prices[offer_id] = offer_data
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–∞–∫–µ—Ç–∞–º–∏
            if i + batch_size < len(offer_ids):
                time.sleep(0.2)
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –ø–∞–∫–µ—Ç–µ {batch_num}: {e}")
            continue
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ü–µ–Ω –¥–ª—è {len(all_prices)} —Ç–æ–≤–∞—Ä–æ–≤")
    return all_prices

def export_detailed_prices(output_file=None):
    """
    –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
    
    Args:
        output_file: –ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    """
    if not output_file:
        output_file = f'detailed_prices_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv'
    
    print("=" * 60)
    print("üíé –î–ï–¢–ê–õ–¨–ù–´–ô –≠–ö–°–ü–û–†–¢ –¶–ï–ù –¢–û–í–ê–†–û–í")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        config = get_config()
        client = YandexMarketClient(config.api_key, AuthType.API_KEY)
        
        print(f"üè™ –ö–∞–º–ø–∞–Ω–∏—è: {config.campaign_id}")
        print(f"üìÑ –§–∞–π–ª: {output_file}")
        print()
        
        # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...")
        all_offers = []
        page_token = None
        page = 1
        
        while True:
            print(f"   –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}...", end=" ")
            
            response = client.offers.get_offers(
                campaign_id=config.campaign_id,
                page_token=page_token,
                limit=200
            )
            
            offers = response.get('offers', [])
            if not offers:
                print("–ì–æ—Ç–æ–≤–æ!")
                break
            
            all_offers.extend(offers)
            print(f"–Ω–∞–π–¥–µ–Ω–æ {len(offers)} —Ç–æ–≤–∞—Ä–æ–≤")
            
            paging = response.get('paging', {})
            page_token = paging.get('nextPageToken')
            if not page_token:
                break
                
            page += 1
            time.sleep(0.1)
        
        print(f"‚úÖ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_offers)}")
        
        if not all_offers:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        
        # 2. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
        offer_ids = [offer.get('offerId') for offer in all_offers if offer.get('offerId')]
        detailed_prices = get_detailed_prices(client, config.campaign_id, offer_ids)
        
        # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
        print("\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV...")
        
        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
            writer = csv.writer(csvfile)
            
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏
            writer.writerow([
                'ID —Ç–æ–≤–∞—Ä–∞',
                '–ù–∞–∑–≤–∞–Ω–∏–µ',
                '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å',
                '–¶–µ–Ω–∞ –≤ –∫–∞–º–ø–∞–Ω–∏–∏',
                '–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞',
                '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞',
                '–í–∞–ª—é—Ç–∞',
                '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã',
                '–°—Ç–∞—Ç—É—Å',
                'ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫',
                '–û—à–∏–±–∫–∏',
                '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è'
            ])
            
            # –î–∞–Ω–Ω—ã–µ
            for offer in all_offers:
                offer_id = offer.get('offerId', '')
                name = offer.get('name', '')
                vendor = offer.get('vendor', '')
                status = offer.get('status', '')
                category_id = offer.get('marketCategoryId', '')
                
                # –¶–µ–Ω—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                campaign_price = ''
                basic_price = ''
                currency = 'RUR'
                
                if offer.get('campaignPrice', {}).get('value'):
                    campaign_price = offer['campaignPrice']['value']
                    currency = offer['campaignPrice'].get('currency', 'RUR')
                
                if offer.get('basicPrice', {}).get('value'):
                    basic_price = offer['basicPrice']['value']
                
                # –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                actual_price = ''
                price_updated = ''
                
                if offer_id in detailed_prices:
                    price_info = detailed_prices[offer_id]
                    price_data = price_info.get('price', {})
                    if price_data.get('value'):
                        actual_price = price_data['value']
                        currency = price_data.get('currency', currency)
                    price_updated = price_info.get('updatedAt', '')
                
                # –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è  
                errors = []
                warnings = []
                
                if offer.get('errors'):
                    errors = [e.get('message', '') for e in offer['errors']]
                
                if offer.get('warnings'):
                    warnings = [w.get('message', '') for w in offer['warnings']]
                
                writer.writerow([
                    offer_id,
                    name,
                    vendor,
                    campaign_price,
                    basic_price,
                    actual_price,
                    currency,
                    price_updated,
                    status,
                    category_id,
                    len(errors),
                    '; '.join(errors) if errors else '',
                    '; '.join(warnings) if warnings else ''
                ])
        
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        with_campaign_price = sum(1 for offer in all_offers 
                                 if offer.get('campaignPrice', {}).get('value'))
        with_basic_price = sum(1 for offer in all_offers 
                              if offer.get('basicPrice', {}).get('value'))
        with_actual_price = len(detailed_prices)
        with_errors = sum(1 for offer in all_offers if offer.get('errors'))
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_offers)}")
        print(f"   - –° —Ü–µ–Ω–∞–º–∏ –∫–∞–º–ø–∞–Ω–∏–∏: {with_campaign_price}")
        print(f"   - –° –±–∞–∑–æ–≤—ã–º–∏ —Ü–µ–Ω–∞–º–∏: {with_basic_price}")
        print(f"   - –° –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏: {with_actual_price}")
        print(f"   - –° –æ—à–∏–±–∫–∞–º–∏: {with_errors}")
        print()
        print("üéâ –ì–æ—Ç–æ–≤–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ config.env")
        import traceback
        print("üîç –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()

if __name__ == "__main__":
    import sys
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –∏–º—è —Ñ–∞–π–ª–∞
    output_file = sys.argv[1] if len(sys.argv) > 1 else None
    
    export_detailed_prices(output_file) 